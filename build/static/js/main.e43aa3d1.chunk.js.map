{"version":3,"sources":["reducers/notificationReducer.js","services/blogService.js","services/loginService.js","reducers/userReducer.js","components/LoginForm.js","components/Blog.js","components/AddBlogForm.js","components/Togglable.js","components/UserDisplay.js","components/User.js","services/usersService.js","reducers/usersReducer.js","reducers/blogsReducer.js","components/SingleBlog.js","components/NavBar.js","components/BlogDisplay.js","components/Notification.js","components/FrontPage.js","components/RegisterForm.js","App.js","store.js","theme.js","index.js"],"names":["timeoutID","baseUrl","token","getAll","a","axios","get","response","data","addBlog","newBlog","config","headers","Authorization","post","addLikes","id","update","put","removeBlog","delete","addComment","comment","commentObject","blogService","setToken","newToken","login","credentials","loginService","setUser","user","type","userReducer","state","action","notifyWith","notification","messageType","dispatch","message","clearTimeout","setTimeout","notificationReducer","LoginForm","useState","username","setUsername","password","setPassword","history","useHistory","useDispatch","handleLogin","event","preventDefault","window","localStorage","setItem","JSON","stringify","push","console","log","className","onSubmit","TextField","variant","label","value","name","onChange","target","Button","color","component","Link","to","Blog","blog","handleLike","handleRemove","toggle","setToggle","buttonToggle","title","underline","author","onClick","likes","href","url","size","AddBlogForm","handleAdd","toggleRef","setTitle","setAuthor","setUrl","current","toggleVisibility","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","style","buttonLabel","children","displayName","UserDisplay","users","map","x","blogs","length","User","useParams","selectedUser","filter","registerUser","usersService","addToBlogsArray","usersReducer","foundUser","find","newUsers","b","concat","blogsReducer","allBlogs","sort","addedBlog","filteredBlogs","updatedBlogs","likedBlog","commentedBlog","SingleBlog","multiline","comments","Math","round","random","NavBar","handleLogout","location","useLocation","disabled","pathname","BlogDisplay","useSelector","useRef","useEffect","confirm","deleteBlog","removeFromBlogsArray","updatedBlog","likeBlog","removeItem","exact","path","Notification","Alert","severity","FrontPage","RegisterForm","confirmation","setConfirmation","handleRegister","error","App","loggedInUserJSON","getItem","parse","Container","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","theme","createTheme","palette","primary","main","secondary","typography","button","textTransform","fontSize","fontWeight","overrides","MuiInput","input","fontFamily","borderBottom","MuiFilledInput","MuiFormLabel","root","MuiAlert","icon","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e43aa3d1.chunk.js","sourcesContent":["const notificationReducer = (state = null, action) => {\r\n  switch(action.type) {\r\n  case 'NOTIFY':\r\n    return {\r\n      message: action.message,\r\n      type: action.messageType\r\n    }\r\n  case 'RESET':\r\n    return null\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nlet timeoutID\r\n\r\nexport const notifyWith = (notification, messageType) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: 'NOTIFY',\r\n      message: notification,\r\n      messageType\r\n    })\r\n\r\n    if (timeoutID) {\r\n      clearTimeout(timeoutID)\r\n    }\r\n\r\n    timeoutID = setTimeout(() => {\r\n      dispatch({\r\n        type: 'RESET'\r\n      })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport default notificationReducer","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\n// Format correctly for use.\r\n// Stored here in memory, used in add and remove blog requests\r\nconst setToken = (newToken) => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst addBlog = async (newBlog) => {\r\n\r\n  // https://github.com/axios/axios#instance-methods\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nconst addLikes = async (id, update) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, update)\r\n  return response.data\r\n}\r\n\r\nconst removeBlog = async (id) => {\r\n\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n\r\n  return response\r\n}\r\n\r\nconst addComment = async (id, comment) => {\r\n  let commentObject = { comment }\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, commentObject)\r\n  return response.data\r\n}\r\n\r\nconst blogService = {\r\n  getAll, addBlog, setToken,\r\n  addLikes, removeBlog, addComment\r\n}\r\n\r\nexport default blogService","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst loginService = { login }\r\n\r\nexport default loginService","const userReducer = (state = null, action) => {\r\n  switch(action.type) {\r\n  case 'RESET_USER':\r\n    return null\r\n  case 'SET_USER':\r\n    return action.user\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const resetUser = () => {\r\n  return { type: 'RESET_USER' }\r\n}\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  }\r\n}\r\n\r\nexport default userReducer","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport loginService from '../services/loginService'\r\nimport blogService from '../services/blogService'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport { notifyWith } from '../reducers/notificationReducer'\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedInBloglistUser',\r\n        JSON.stringify(user)\r\n      )\r\n      dispatch(notifyWith(`${username} logged in successfully!`, 'success'))\r\n      // Save the token in a variable for the blogService\r\n      blogService.setToken(user.token)\r\n      // user contains the name, username and token of the logged in user\r\n      dispatch(setUser(user))\r\n      setUsername('')\r\n      setPassword('')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      dispatch(notifyWith('Wrong username or password.', 'error'))\r\n      console.log(exception)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='frontpage-title-text'>BlogList</div>\r\n      <div className=\"center-form\">\r\n        <form data-cy='loginForm' onSubmit={handleLogin}>\r\n          <div className=\"input-fields\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              id='username'\r\n              label='Username'\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              id='password'\r\n              label='Password'\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n          </div>\r\n          <div className='frontpage-buttons'>\r\n            <div className='button-gap'>\r\n              <Button color='secondary' data-cy='loginButton' type=\"submit\">Login</Button>\r\n              <Button component={Link} to=\"/\" color=\"secondary\">Back</Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Link as HyperLink } from '@material-ui/core'\r\n\r\nconst Blog = ({ blog, user, handleLike, handleRemove }) => {\r\n  const [toggle, setToggle] = useState(true)\r\n\r\n  const buttonToggle = () => setToggle(!toggle)\r\n\r\n  return (\r\n    <div data-cy={blog.title} className='blog'>\r\n      <div className='blogHeader'>\r\n        <div>\r\n          {/* if toggle true or false */}\r\n          <HyperLink\r\n            color=\"secondary\"\r\n            underline='hover'\r\n            // https://stackoverflow.com/a/59187804\r\n            component={Link}\r\n            className=\"blogTitle\"\r\n            to={`blogs/${blog.id}`}\r\n          >\r\n            {`\"${blog.title}\" by ${blog.author}`}\r\n          </HyperLink>\r\n        </div>\r\n        <div>\r\n          { toggle\r\n            ?\r\n            // https://stackoverflow.com/a/50342884\r\n            <Button color=\"secondary\" onClick={buttonToggle}>+</Button>\r\n            :\r\n            <Button color=\"secondary\" onClick={buttonToggle}>-</Button>\r\n          }\r\n        </div>\r\n      </div>\r\n      { toggle ?\r\n        null\r\n        :\r\n        <div className=\"expandedBlog\">\r\n            Added by: {blog.user.username}<br />\r\n            Total Likes: {blog.likes}{' '}\r\n          <Button data-cy='likeButton' onClick={handleLike} type=\"submit\">&#128077;</Button><br />\r\n            Url: <HyperLink color=\"secondary\" underline=\"always\" href={blog.url}>{blog.url}</HyperLink><br /><br />\r\n          { /* conditional render */\r\n            blog.user.username === user.username\r\n              ? <Button variant=\"contained\" size=\"large\" color=\"secondary\" data-cy='removeButton' onClick={handleRemove}>Remove</Button>\r\n              : null}\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TextField, Button } from '@material-ui/core'\r\n\r\nconst AddBlogForm = ({ handleAdd, toggleRef }) => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n\r\n  const createBlog = (event) => {\r\n    // first creating the blog object,\r\n    // then calling addBlog, sending it to the DB via the backend\r\n    // finally clearing the controlled inputs\r\n    event.preventDefault()\r\n\r\n    handleAdd({\r\n      'title' : title,\r\n      'author' : author,\r\n      'url' : url,\r\n    })\r\n\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n    toggleRef.current.toggleVisibility()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={createBlog}>\r\n        <div>\r\n          <br />\r\n          <TextField\r\n            label=\"Title\"\r\n            className='title'\r\n            id='title'\r\n            type='text'\r\n            value={title}\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Author\"\r\n            className='author'\r\n            id='author'\r\n            type='text'\r\n            value={author}\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n          <br />\r\n          <TextField\r\n            label=\"Url\"\r\n            className='url'\r\n            id='url'\r\n            type='text'\r\n            value={url}\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n        </div>\r\n        <br />\r\n        <Button color=\"secondary\" type='submit'>Add</Button>\r\n      </form>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nAddBlogForm.propTypes = {\r\n  handleAdd: PropTypes.func.isRequired,\r\n  toggleRef: PropTypes.object.isRequired\r\n}\r\n\r\nexport default AddBlogForm","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from '@material-ui/core'\r\n\r\n// https://reactjs.org/docs/forwarding-refs.html\r\n// forwardRef => the component can access the ref passed to it\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => setVisible(!visible)\r\n\r\n  // the ref of this component now has the toggleVisibility\r\n  // as a method. The state of this component can be changed\r\n  // from its parent which is not possible without refs\r\n  useImperativeHandle(ref, () =>  {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n  // https://reactjs.org/docs/hooks-reference.html#useimperativehandle\r\n  // useImperativeHandle customizes the instance value that\r\n  // is exposed to parent components when using ref\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button color=\"secondary\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <Button color='secondary' onClick={toggleVisibility}>Cancel</Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = 'Togglable'\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Link as HyperLink } from '@material-ui/core'\r\n\r\nconst UserDisplay = ({ users }) => {\r\n  // UserDisplay, like Blog, is a presentational component\r\n  // so we want to exclude state management, pass users as a prop\r\n  return (\r\n    <>\r\n      <div className='pageTitle'>Users</div>\r\n      { users\r\n        ?\r\n        <table className=\"usersTable\">\r\n          <thead>\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Blogs added</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(x =>\r\n              <tr key={x.id}>\r\n                <td>\r\n                  <HyperLink\r\n                    component={Link}\r\n                    color=\"secondary\"\r\n                    underline=\"always\"\r\n                    to={`/users/${x.id}`}\r\n                  >\r\n                    {x.username}\r\n                  </HyperLink>\r\n                </td>\r\n                <td>{x.blogs.length}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        :\r\n        null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDisplay","import React from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nconst User = ({ users }) => {\r\n  // conditionally render the component\r\n  if (users) {\r\n    const id = useParams().id\r\n    let selectedUser = users.filter((x) => x.id === id)\r\n    return (\r\n      <div className='whiteText'>\r\n        <div className='smallPageTitle'>User: {selectedUser[0].username}</div>\r\n        <h3>Blogs added:</h3>\r\n        {selectedUser[0].blogs.length ?\r\n          <ul>\r\n            {selectedUser[0].blogs.map(x =>\r\n              <li key={x.id}>\r\n              &quot;{x.title}&quot;\r\n              </li>\r\n            )}\r\n          </ul>\r\n          : <p>No blogs found...</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  else return null\r\n}\r\n\r\nexport default User","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst registerUser = async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nconst usersService = { getAll, registerUser }\r\n\r\nexport default usersService","import usersService from '../services/usersService'\r\n\r\nconst usersReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n  case 'INIT_USERS':\r\n    return action.users\r\n  case 'REMOVE_FROM_BLOGS_ARRAY': {\r\n    // find user in users array\r\n    let foundUser = state.find((x) => x.id === action.blog.user.id)\r\n    // remove the blog from the blogs array of the user\r\n    foundUser = {\r\n      ...foundUser,\r\n      blogs: foundUser.blogs.filter((x) => x.id !== action.blog.id)\r\n    }\r\n    // return new users array\r\n    let newUsers = state.map((x) => foundUser.id === x.id ? foundUser : x)\r\n    return newUsers\r\n  }\r\n  case 'ADD_TO_BLOGS_ARRAY': {\r\n    let b = action.blog\r\n    let newBlog = {\r\n      author: b.author,\r\n      id: b.id,\r\n      likes: b.likes,\r\n      title: b.title,\r\n      url: b.url,\r\n      user: b.user.id,\r\n    }\r\n    let foundUser = state.find((x) => x.id === b.user.id)\r\n    foundUser = { ...foundUser, blogs: foundUser.blogs.concat(newBlog) }\r\n    let newUsers = state.map((x) => foundUser.id === x.id ? foundUser : x)\r\n    return newUsers\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const initializeUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      users\r\n    })\r\n  }\r\n}\r\n\r\nexport const removeFromBlogsArray = (blog) => {\r\n  return {\r\n    type: 'REMOVE_FROM_BLOGS_ARRAY',\r\n    blog\r\n  }\r\n}\r\n\r\nexport const addToBlogsArray = (blog) => {\r\n  return {\r\n    type: 'ADD_TO_BLOGS_ARRAY',\r\n    blog\r\n  }\r\n}\r\n\r\nexport default usersReducer","import blogService from '../services/blogService'\r\nimport { addToBlogsArray } from './usersReducer'\r\n\r\nconst blogsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n  case 'INIT_BLOGS': {\r\n    // https://stackoverflow.com/a/50753272\r\n    action.allBlogs.sort((a, b) => b.likes - a.likes)\r\n    return action.allBlogs\r\n  }\r\n  case 'ADD_BLOG':\r\n    return [ ...state, action.addedBlog ]\r\n  case 'REMOVE_BLOG': {\r\n    let filteredBlogs = state.filter(x => x.id !== action.blog.id)\r\n    return filteredBlogs\r\n  }\r\n  case 'ADD_LIKE': {\r\n    let updatedBlogs = state.filter(x => x.id !== action.likedBlog.id)\r\n    updatedBlogs = [ ...updatedBlogs, action.likedBlog]\r\n    updatedBlogs.sort((a, b) => b.likes - a.likes)\r\n    return updatedBlogs\r\n  }\r\n  case 'ADD_COMMENT': {\r\n    return state.map((x) =>\r\n      x.id === action.commentedBlog.id\r\n        ? action.commentedBlog\r\n        : x\r\n    )\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport const likeBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const likedBlog = await blogService.addLikes(blog.id, blog)\r\n    dispatch({\r\n      type: 'ADD_LIKE',\r\n      likedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const addComment = (id, comment) => {\r\n  return async (dispatch) => {\r\n    const commentedBlog = await blogService.addComment(id, comment)\r\n    dispatch({\r\n      type: 'ADD_COMMENT',\r\n      commentedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const postBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const addedBlog = await blogService.addBlog(blog)\r\n    dispatch(addToBlogsArray(addedBlog))\r\n    dispatch({\r\n      type: 'ADD_BLOG',\r\n      addedBlog\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    await blogService.removeBlog(blog.id)\r\n    dispatch({\r\n      type: 'REMOVE_BLOG',\r\n      blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const initializeBlogs = () => {\r\n  return async (dispatch) => {\r\n    const allBlogs = await blogService.getAll()\r\n    dispatch({\r\n      type: 'INIT_BLOGS',\r\n      allBlogs\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogsReducer","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Button, Link, TextField } from '@material-ui/core'\r\n\r\nimport { addComment } from '../reducers/blogsReducer'\r\nimport { notifyWith } from '../reducers/notificationReducer'\r\n\r\nconst SingleBlog = ({ blogs, handleLike }) => {\r\n  const dispatch = useDispatch()\r\n  let id = useParams().id\r\n  let blog = blogs.find((x) => x.id === id)\r\n\r\n  const handleAddComment = (event) => {\r\n    event.preventDefault()\r\n    if (!event.target.comment.value) {\r\n      dispatch(notifyWith('Comment field is blank', 'error'))\r\n      return\r\n    }\r\n    dispatch(addComment(blog.id, event.target.comment.value))\r\n    dispatch(notifyWith(`Added a new comment to ${blog.title}!`, 'success'))\r\n    event.target.comment.value = ''\r\n  }\r\n\r\n  if (blogs && blog) {\r\n    return (\r\n      <div className='whiteText'>\r\n        <div className=\"smallPageTitle\">&quot;{blog.title}&quot; by {blog.author}</div>\r\n        Url:{' '}<Link underline='always' color=\"secondary\" href={blog.url}>{blog.url}</Link><br />\r\n        Total Likes: {blog.likes}{' '}\r\n        <Button onClick={() => handleLike(blog)}>&#128077;</Button>\r\n        <br />\r\n        <span>added by {blog.user.username}</span><br />\r\n        <div className=\"smallPageTitle\">Comments</div>\r\n        <form className=\"commentForm\" onSubmit={handleAddComment}>\r\n          <TextField\r\n            variant=\"filled\"\r\n            label=\"New Comment\"\r\n            color=\"secondary\"\r\n            name=\"comment\"\r\n            multiline\r\n          />\r\n          <div className=\"commentButton\">\r\n            <Button\r\n              color=\"secondary\"\r\n              type=\"submit\"\r\n            >\r\n              Add Comment\r\n            </Button>\r\n          </div>\r\n        </form>\r\n        {blog.comments.length ?\r\n          <ul>\r\n            {blog.comments.map((x) =>\r\n              // generate unique key\r\n              <li key={x + Math.round(Math.random() * 100000)}>\r\n                {x}\r\n              </li>\r\n            )}\r\n          </ul>\r\n          : <p>No comments found...</p>\r\n        }\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <p>{id} is not a valid blog id</p>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SingleBlog","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core'\r\n\r\nconst NavBar = ({ username, handleLogout }) => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <div className='navigationBar'>\r\n      <div className='navButtons'>\r\n        <Button variant=\"contained\" style={{ 'marginRight': '10px' }} component={Link} to=\"/blogs\" disabled={location.pathname === '/blogs'}>Blogs</Button>\r\n        <Button variant=\"contained\" component={Link} to=\"/users\" disabled={location.pathname === '/users'}>Users</Button>\r\n      </div>\r\n      <div className='logout'>\r\n        <div className='logoutText'>\r\n          {username} is logged in\r\n        </div>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          onClick={handleLogout}\r\n        >\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React, { useEffect, useRef } from 'react'\r\nimport { BrowserRouter as Router, Switch, useHistory, Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Blog from './Blog'\r\nimport AddBlogForm from './AddBlogForm'\r\nimport Togglable from './Togglable'\r\nimport UserDisplay from './UserDisplay'\r\nimport User from './User'\r\nimport SingleBlog from './SingleBlog'\r\nimport NavBar from './NavBar'\r\nimport { postBlog, deleteBlog, likeBlog } from '../reducers/blogsReducer'\r\nimport { notifyWith } from '../reducers/notificationReducer'\r\nimport { initializeUsers, removeFromBlogsArray } from '../reducers/usersReducer'\r\nimport { resetUser } from '../reducers/userReducer'\r\n\r\nconst BlogDisplay = () => {\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const blogs = useSelector(state => state.blogs)\r\n  const user = useSelector(state => state.user)\r\n  const users = useSelector(state => state.users)\r\n  const toggleRef = useRef()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeUsers())\r\n  }, [dispatch])\r\n\r\n  const handleRemove = (blog) => {\r\n    if (window.confirm(`Remove \"${blog.title}\" by ${blog.author}?`)) {\r\n      dispatch(deleteBlog(blog))\r\n      dispatch(notifyWith(`\"${blog.title}\" removed from the blogs list!`, 'success'))\r\n      dispatch(removeFromBlogsArray(blog))\r\n    }\r\n  }\r\n\r\n  const handleAdd = (newBlog) => {\r\n    const { title, author, url } = newBlog\r\n    if (!title || !author || !url) {\r\n      dispatch(notifyWith('Please fill in all fields', 'error'))\r\n      return\r\n    }\r\n    dispatch(postBlog(newBlog))\r\n    dispatch(notifyWith(`\"${newBlog.title}\" by ${newBlog.author} added`, 'success'))\r\n  }\r\n\r\n  const handleLike = (blog) => {\r\n    // The backend returns a populated user field (mongoose method)\r\n    // when we send GET requests to api/blogs.\r\n    // However, when we send PUT request we need to omit those\r\n    // populated fields or we get 400 Bad requests\r\n    let updatedBlog = { ...blog, likes: blog.likes + 1 , user: blog.user.id }\r\n    dispatch(likeBlog(updatedBlog))\r\n    dispatch(notifyWith(`Liked \"${blog.title}\"!`, 'success'))\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('loggedInBloglistUser')\r\n    dispatch(notifyWith(`${user.username} logged out successfully!`, 'success'))\r\n    dispatch(resetUser())\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <NavBar username={user.username} handleLogout={handleLogout} />\r\n        <Switch>\r\n          <Route exact path=\"/blogs\">\r\n            <div className='pageTitle'>Blogs</div>\r\n            <div className='blogGrid'>\r\n              {blogs.map(blog =>\r\n                <Blog\r\n                  key={blog.id}\r\n                  blog={blog}\r\n                  user={user}\r\n                  handleLike={() => handleLike(blog)}\r\n                  handleRemove={() => handleRemove(blog)}\r\n                />)}\r\n            </div>\r\n            <Togglable\r\n              buttonLabel=\"Add a new Blog\"\r\n              ref={toggleRef}\r\n            >\r\n              {/*\r\n                pass toggleRef as a ref to Togglable\r\n                but as a prop to AddBlogForm\r\n              */}\r\n              <AddBlogForm handleAdd={handleAdd} toggleRef={toggleRef} />\r\n            </Togglable>\r\n          </Route>\r\n          <Route exact path='/blogs/:id'>\r\n            <SingleBlog blogs={blogs} handleLike={handleLike} />\r\n          </Route>\r\n          <Route exact path=\"/users\">\r\n            <UserDisplay users={users}/>\r\n          </Route>\r\n          <Route exact path=\"/users/:id\">\r\n            <User users={users} />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogDisplay","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n\r\n  if (notification === null) {\r\n    return (\r\n      <Alert className='empty'>\r\n        Notifications go here\r\n      </Alert>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Alert severity={notification.type}>\r\n      {notification.message}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst FrontPage = () => {\r\n  return (\r\n    <div>\r\n      <div className='frontpage-title-text'>BlogList</div>\r\n      <div className='frontpage-buttons'>\r\n        <div className='button-gap'>\r\n          <Button component={Link} to=\"/login\" color=\"secondary\">Login</Button>\r\n          <Button component={Link} to=\"/register\" color=\"secondary\">Register</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FrontPage","import React, { useState } from 'react'\r\nimport { TextField, Button } from '@material-ui/core'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { notifyWith } from '../reducers/notificationReducer'\r\nimport { setUser } from '../reducers/userReducer'\r\nimport usersService from '../services/usersService'\r\nimport blogService from '../services/blogService'\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmation, setConfirmation] = useState('')\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault()\r\n\r\n    if (password !== confirmation) {\r\n      dispatch(notifyWith('Password and Confirmation Password do not match', 'error'))\r\n      setPassword('')\r\n      setConfirmation('')\r\n      return\r\n    }\r\n\r\n    try {\r\n      const user = await usersService.registerUser({\r\n        username, password\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedInBloglistUser',\r\n        JSON.stringify(user)\r\n      )\r\n\r\n      dispatch(notifyWith(`${username} registered and logged in successfully!`, 'success'))\r\n      blogService.setToken(user.token)\r\n      dispatch(setUser(user))\r\n      setUsername('')\r\n      setPassword('')\r\n      setConfirmation('')\r\n      history.push('/')\r\n    } catch (e) {\r\n      dispatch(notifyWith(e.response.data.error, 'error'))\r\n      console.log(e.response.data.error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className='frontpage-title-text'>BlogList</div>\r\n      <div className=\"center-form\">\r\n        <form data-cy='registerForm' onSubmit={handleRegister}>\r\n          <div className=\"input-fields\">\r\n            <TextField\r\n              variant=\"standard\"\r\n              id='username'\r\n              label='Username'\r\n              type=\"text\"\r\n              value={username}\r\n              name=\"Username\"\r\n              onChange={({ target }) => setUsername(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              id='password'\r\n              label='Password'\r\n              type=\"password\"\r\n              value={password}\r\n              name=\"Password\"\r\n              onChange={({ target }) => setPassword(target.value)}\r\n            />\r\n            <TextField\r\n              variant=\"standard\"\r\n              id='confirmation'\r\n              label='Confirm Password'\r\n              type=\"password\"\r\n              value={confirmation}\r\n              name=\"Confirmation\"\r\n              onChange={({ target }) => setConfirmation(target.value)}\r\n            />\r\n          </div>\r\n          <div className='frontpage-buttons'>\r\n            <div className='button-gap'>\r\n              <Button color='secondary' data-cy='registerButton' type=\"submit\">Register</Button>\r\n              <Button component={Link} to=\"/\" color=\"secondary\">Back</Button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterForm","import React, { useEffect } from 'react'\r\nimport Container from '@material-ui/core/Container'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport blogService from './services/blogService'\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogDisplay from './components/BlogDisplay'\r\nimport Notification from './components/Notification'\r\nimport FrontPage from './components/FrontPage'\r\nimport RegisterForm from './components/RegisterForm'\r\nimport { initializeBlogs } from './reducers/blogsReducer'\r\nimport { setUser } from './reducers/userReducer'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state => state.user)\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogs())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    const loggedInUserJSON = window.localStorage.getItem('loggedInBloglistUser')\r\n    if (loggedInUserJSON) {\r\n      const user = JSON.parse(loggedInUserJSON)\r\n      // put user object, token included, in the redux store\r\n      dispatch(setUser(user))\r\n      // save the token to a variable for the blogService\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"notification\">\r\n        <Notification />\r\n      </div>\r\n      <div className=\"blog-container\">\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              <LoginForm />\r\n            </Route>\r\n            <Route exact path='/register'>\r\n              <RegisterForm />\r\n            </Route>\r\n            <Route exact path='/blogs'>\r\n              {user ? <BlogDisplay /> : <Redirect to=\"/\" />}\r\n            </Route>\r\n            {/* default route, binds to any route that isn't included above */}\r\n            <Route path=\"/\">\r\n              {user ? <Redirect to=\"/blogs\" /> : <FrontPage />}\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport blogsReducer from './reducers/blogsReducer'\r\nimport userReducer from './reducers/userReducer'\r\nimport usersReducer from './reducers/usersReducer'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst reducer = combineReducers ({\r\n  notification: notificationReducer,\r\n  blogs: blogsReducer,\r\n  user: userReducer,\r\n  users: usersReducer\r\n})\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n\r\nexport default store","import { createTheme } from '@material-ui/core/styles'\r\n\r\n// https://www.youtube.com/watch?v=xIIJfmDnvPE\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: 'hsl(209, 90%, 30%)'\r\n    },\r\n    secondary: {\r\n      main: '#FFFFFF'\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      // #https://stackoverflow.com/a/58222011\r\n      textTransform: 'none',\r\n      fontSize: 25,\r\n      fontWeight: 600,\r\n    }\r\n  },\r\n  // https://stackoverflow.com/a/57995968\r\n  overrides: {\r\n    MuiInput: {\r\n      input: {\r\n        color: 'white',\r\n        fontFamily: 'Inconsolata',\r\n        fontSize: 40,\r\n      },\r\n      // https://stackoverflow.com/a/56026253\r\n      underline: {\r\n        '&:after': {\r\n          borderBottom: '2px solid white'\r\n        }\r\n      }\r\n    },\r\n    MuiFilledInput: {\r\n      input: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontFamily: 'Inconsolata',\r\n      }\r\n    },\r\n    MuiFormLabel: {\r\n      root: {\r\n        color: 'white',\r\n        fontFamily: 'Inconsolata',\r\n        fontSize: 20,\r\n        fontWeight: 600\r\n      }\r\n    },\r\n    // https://mui.com/api/alert/#css\r\n    MuiAlert: {\r\n      root: {\r\n        fontSize: 25,\r\n        fontWeight: 900\r\n      },\r\n      icon: {\r\n        fontSize: 35\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport default theme","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport theme from './theme'\r\nimport { ThemeProvider } from '@material-ui/core'\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </ThemeProvider>\r\n  , document.getElementById('root'))"],"sourceRoot":""}